<?php

/**
 * This is the model base class for the table "vdc_designer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Designer".
 *
 * Columns in table "vdc_designer" available as properties of the model,
 * followed by relations of table "vdc_designer" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $user_id
 * @property integer $client_id
 * @property integer $designer_status_id
 *
 * @property User $user
 * @property Client $client
 * @property DesignerStatus $designerStatus
 * @property Order[] $orders
 */
abstract class BaseDesigner extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'vdc_designer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Designer|Designers', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, user_id, client_id, designer_status_id', 'required'),
			array('user_id, client_id, designer_status_id', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('id, name, user_id, client_id, designer_status_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'client' => array(self::BELONGS_TO, 'Client', 'client_id'),
			'designerStatus' => array(self::BELONGS_TO, 'DesignerStatus', 'designer_status_id'),
			'orders' => array(self::HAS_MANY, 'Order', 'designer_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'user_id' => null,
			'client_id' => null,
			'designer_status_id' => null,
			'user' => null,
			'client' => null,
			'designerStatus' => null,
			'orders' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('client_id', $this->client_id);
		$criteria->compare('designer_status_id', $this->designer_status_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}