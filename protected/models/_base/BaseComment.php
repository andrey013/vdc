<?php

/**
 * This is the model base class for the table "vdc_comment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Comment".
 *
 * Columns in table "vdc_comment" available as properties of the model,
 * followed by relations of table "vdc_comment" available as properties of the model.
 *
 * @property integer $id
 * @property string $text
 * @property integer $parent_id
 * @property string $thread
 * @property integer $user_id
 * @property integer $order_id
 * @property string $create_date
 *
 * @property User $user
 * @property Order $order
 * @property Comment $parent
 * @property Comment[] $comments
 */
abstract class BaseComment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'vdc_comment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Comment|Comments', $n);
	}

	public static function representingColumn() {
		return 'thread';
	}

	public function rules() {
		return array(
			array('thread, user_id, order_id, create_date', 'required'),
			array('parent_id, user_id, order_id', 'numerical', 'integerOnly'=>true),
			array('text', 'length', 'max'=>1024),
			array('thread', 'length', 'max'=>30),
			array('text, parent_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, text, parent_id, thread, user_id, order_id, create_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User2', 'user_id'),
			'order' => array(self::BELONGS_TO, 'Order', 'order_id'),
			'parent' => array(self::BELONGS_TO, 'Comment', 'parent_id'),
			'comments' => array(self::HAS_MANY, 'Comment', 'parent_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'text' => Yii::t('app', 'Text'),
			'parent_id' => null,
			'thread' => Yii::t('app', 'Thread'),
			'user_id' => null,
			'order_id' => null,
			'create_date' => Yii::t('app', 'Create Date'),
			'user' => null,
			'order' => null,
			'parent' => null,
			'comments' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('parent_id', $this->parent_id);
		$criteria->compare('thread', $this->thread, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('order_id', $this->order_id);
		$criteria->compare('create_date', $this->create_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}