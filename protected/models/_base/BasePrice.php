<?php

/**
 * This is the model base class for the table "vdc_price".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Price".
 *
 * Columns in table "vdc_price" available as properties of the model,
 * followed by relations of table "vdc_price" available as properties of the model.
 *
 * @property integer $id
 * @property integer $order_type_id
 * @property integer $difficulty_id
 * @property integer $designer_price
 * @property integer $client_price
 *
 * @property OrderType $orderType
 * @property Difficulty $difficulty
 */
abstract class BasePrice extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'vdc_price';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Price|Prices', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('order_type_id, difficulty_id, designer_price, client_price', 'required'),
			array('order_type_id, difficulty_id, designer_price, client_price', 'numerical', 'integerOnly'=>true),
			array('id, order_type_id, difficulty_id, designer_price, client_price', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'orderType' => array(self::BELONGS_TO, 'OrderType', 'order_type_id'),
			'difficulty' => array(self::BELONGS_TO, 'Difficulty', 'difficulty_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'order_type_id' => null,
			'difficulty_id' => null,
			'designer_price' => Yii::t('app', 'Designer Price'),
			'client_price' => Yii::t('app', 'Client Price'),
			'orderType' => null,
			'difficulty' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('order_type_id', $this->order_type_id);
		$criteria->compare('difficulty_id', $this->difficulty_id);
		$criteria->compare('designer_price', $this->designer_price);
		$criteria->compare('client_price', $this->client_price);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}